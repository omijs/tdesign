var o=Object.defineProperty;var d=(a,r,t)=>r in a?o(a,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[r]=t;var s=(a,r,t)=>(d(a,typeof r!="symbol"?r+"":r,t),t);import{$ as i,H as p,c as n,d as e}from"./index-4a3ba173.js";import{p as b}from"./marked.esm-23ea8bc7.js";const m=b("\n## API\n### Row Props\n\n名称 | 类型 | 默认值 | 说明 | 必传\n-- | -- | -- | -- | --\nclassName | String | - | 类名 | N\nstyle | Object | - | 样式，TS 类型：`React.CSSProperties` | N\nalign | String | top | 纵向对齐方式，CSS 属性 `align-items` 值。其中 `top` 和 `start` 等效；`middle` 和 `center` 等效；`bottom` 和 `end` 等效。可选项：start/end/center/stretch/baseline/top/middle/bottom | N\ngutter | Number / Object / Array | 0 | 栅格间隔，示例：`{ xs: 8, sm: 16, md: 24}`。当数据类型为 Number 和 Object 时，用于指定横向间隔。当数据类型为数组时，第一个参数为横向间隔，第二个参数为纵向间隔， [水平间隔, 垂直间隔]。TS 类型：`number |  GutterObject | Array<GutterObject | number>` `interface GutterObject { xs: number; sm: number; md: number } `。[详细类型定义](https://github.com/Tencent/omi/blob/master/tdesign/desktop/src/grid/type.ts) | N\njustify | String | start | flex 布局下的水平排列方式。可选项：start/end/center/space-around/space-between | N\ntag | String | div | 自定义元素标签 | N\n\n### Col Props\n\n名称 | 类型 | 默认值 | 说明 | 必传\n-- | -- | -- | -- | --\nclassName | String | - | 类名 | N\nstyle | Object | - | 样式，TS 类型：`React.CSSProperties` | N\nflex | String / Number | - | flex 布局填充。CSS 属性 flex 值。示例：2 / 3 / '100px' / 'auto' / '1 1 200px' | N\nlg | Number / Object | - | ≥1200px 响应式栅格，可为栅格数或一个包含其他属性的对象（小尺寸电脑）。TS 类型：`number | BaseColProps` | N\nmd | Number / Object | - | ≥992px 响应式栅格，可为栅格数或一个包含其他属性的对象（超小尺寸电脑）。TS 类型：`number | BaseColProps` | N\noffset | Number | 0 | 栅格左侧的间隔格数，间隔内不可以有栅格 | N\norder | Number | 0 | 栅格顺序，flex 布局模式下有效 | N\npull | Number | 0 | 栅格向左移动格数 | N\npush | Number | 0 | 栅格向右移动格数 | N\nsm | Number / Object | - | ≥768px 响应式栅格，可为栅格数或一个包含其他属性的对象（平板）。TS 类型：`number | BaseColProps` | N\nspan | Number | - | 栅格占位格数，为 0 时相当于 display: none | N\ntag | String | div | 自定义元素标签 | N\nxl | Number / Object | - | ≥1400px 响应式栅格，可为栅格数或一个包含其他属性的对象（中尺寸电脑）。TS 类型：`number | BaseColProps` | N\nxs | Number / Object | - | <768px 响应式栅格，可为栅格数或一个包含其他属性的对象（手机）。TS 类型：`number | BaseColProps` `interface BaseColProps { offset: number; order: number; pull: number; push: number; span: number }`。[详细类型定义](https://github.com/Tencent/omi/blob/master/tdesign/desktop/src/grid/type.ts) | N\nxxl | Number / Object | - | ≥1880px 响应式栅格，可为栅格数或一个包含其他属性的对象（大尺寸电脑）。TS 类型：`number | BaseColProps` | N\n\n");var l;i("page-grid",(l=class extends p{constructor(){super(...arguments);s(this,"tab",["demo","api","design"]);s(this,"tdDocHeader",n());s(this,"tdDocTabs",n());s(this,"updateTab",r=>{this.updateProps({tab:r})})}isShow(r){return this.props.tab===r?{display:"block"}:{display:"none"}}installed(){const r=this.tdDocTabs.current;r.onchange=({detail:t})=>{this.updateTab(t)}}render(){return e(e.f,null,e("td-doc-tabs",{ref:this.tdDocTabs,tab:this.props.tab,style:"display:block"}),e("div",{style:this.isShow("demo"),name:"DEMO"},e("h3",{id:"基本使用"},"基本使用 ",e("a",{class:"header-anchor",href:"#基本使用"})),e("demo-wrapper",null,e("grid-base",null)),e("h3",{id:"区块间隔"},"区块间隔 ",e("a",{class:"header-anchor",href:"#区块间隔"})),e("demo-wrapper",null,e("grid-gutter",null)),e("h3",{id:"左右偏移"},"左右偏移 ",e("a",{class:"header-anchor",href:"#左右偏移"})),e("demo-wrapper",null,e("grid-offset",null)),e("h3",{id:"排序"},"排序 ",e("a",{class:"header-anchor",href:"#排序"})),e("demo-wrapper",null,e("grid-sort",null)),e("h3",{id:"次序"},"次序 ",e("a",{class:"header-anchor",href:"#次序"})),e("demo-wrapper",null,e("grid-order",null)),e("h3",{id:"排版"},"排版 ",e("a",{class:"header-anchor",href:"#排版"})),e("demo-wrapper",null,e("grid-halign",null)),e("h3",{id:"对齐"},"对齐 ",e("a",{class:"header-anchor",href:"#对齐"})),e("demo-wrapper",null,e("grid-valign",null)),e("h3",{id:"flex"},"flex ",e("a",{class:"header-anchor",href:"#flex"})),e("demo-wrapper",null,e("grid-flex",null)),e("h3",{id:"响应式布局"},"响应式布局 ",e("a",{class:"header-anchor",href:"#响应式布局"})),e("demo-wrapper",null,e("grid-responsive",null))),e("div",{style:this.isShow("api"),name:"API"},e("div",{style:"margin-bottom:76px",unsafeHTML:{html:m}})),e("div",{style:this.isShow("design"),name:"DESIGN"}))}},s(l,"defaultProps",{tab:"demo"}),s(l,"propTypes",{tab:String}),l));
