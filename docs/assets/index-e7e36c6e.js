var c=Object.defineProperty;var d=(n,s,o)=>s in n?c(n,s,{enumerable:!0,configurable:!0,writable:!0,value:o}):n[s]=o;var t=(n,s,o)=>(d(n,typeof s!="symbol"?s+"":s,o),o);import{$ as m,H as u,c as l,d as e}from"./index-4a3ba173.js";import{p as g}from"./marked.esm-23ea8bc7.js";const h=g(`
## API
### Message Props

名称 | 类型 | 默认值 | 说明 | 必传
--  |  --  |  --  |  --  |  -- 
className |	String |	- |	类名 |	N
style |	Object |	- 	| 样式，TS 类型：React.CSSProperties |	N
closeBtn	| TNode	| undefined |	关闭按钮，可以自定义。值为 true 显示默认关闭按钮，值为 false 不显示关闭按钮。值类型为 string 则直接显示值，如：“关闭”。也可以完全自定义按钮。TS 类型：string - boolean - TNode。通用类型定义 | N
content |	TNode |	- |	用于自定义消息弹出内容。TS 类型：string - TNode。通用类型定义 |	N
duration |	Number | 3000 |	消息内置计时器，计时到达时会触发 duration-end 事件。单位：毫秒。值为 0 则表示没有计时器。|	N
icon |	TNode |	true |	用于自定义消息前面的图标，优先级大于 theme 设定的图标。值为 false 则不显示图标，值为 true 显示 theme 设定图标。TS 类型：boolean - TNode。通用类型定义 |	N
theme |	String |	info |	消息组件风格。可选项：info/success/warning/error/question/loading。TS 类型：MessageThemeList type MessageThemeList = 'info' -'success' - 'warning' - 'error' - 'question' - 'loading'。详细类型定义 |	N
onClose |	Function ||	TS 类型：(context: { trigger: 'close-click' - 'duration-end', e?: MouseEvent }) => void 关闭消息时触发 |	N
onCloseBtnClick |	Function ||	TS 类型：(context: { e: MouseEvent }) => void 当关闭按钮存在时，用户点击关闭按钮触发 |	N
onDurationEnd |	Function ||	TS 类型：() => void 计时结束后触发 | 	N
`);let r=0,a=document.querySelector("body > message-close").shadowRoot.querySelector("t-message");document.querySelector("body > message-close-all").shadowRoot.querySelector("t-space");document.querySelector("body");var i;m("page-message",(i=class extends u{constructor(){super(...arguments);t(this,"tab",["demo","api","design"]);t(this,"tdDocHeader",l());t(this,"tdDocTabs",l());t(this,"updateTab",s=>{this.updateProps({tab:s})});t(this,"closeToggle",()=>{r===1?(r=0,a.style.display="none"):(r=1,a.style.display="block")});t(this,"openAll",()=>{});t(this,"closeAll",()=>{})}isShow(s){return this.props.tab===s?{display:"block"}:{display:"none"}}installed(){const s=this.tdDocTabs.current;s.onchange=({detail:o})=>{this.updateTab(o)}}render(s,o){return e(e.f,null,e("td-doc-tabs",{ref:this.tdDocTabs,tab:this.props.tab,style:"display:block"}),e("div",{style:"padding:24px"},e("h2",null,"Message全局提示"),e("demo-wrapper",null,e("t-space",{direction:"vertical",size:"large"},e("t-message",{theme:"info",content:"This is my info"}),e("t-message",{theme:"success",content:"This is my success"}),e("t-message",{theme:"warning",content:"This is my warning"}),e("t-message",{theme:"error",content:"This is my error"}))),e("h2",null,"带关闭按钮的全局提示"),e("demo-wrapper",null,e("t-space",{direction:"vertical",size:"large"},e("t-message",{theme:"info",content:"This is my info",closeBtn:!0}),e("t-message",{theme:"success",content:"This is my success",closeBtn:!0}),e("t-message",{theme:"warning",content:"This is my warning",closeBtn:!0}),e("t-message",{theme:"error",content:"This is my error",closeBtn:!0}))),e("h2",null,"加载相应时间自动关闭"),e("demo-wrapper",null,e("t-space",{direction:"vertical",size:"large"},e("t-message",{duration:3e3,theme:"info",content:"This is my info (3s)"}),e("t-message",{duration:5e3,theme:"success",content:"This is my success (5s)"}),e("t-message",{duration:8e3,theme:"warning",content:"This is my warning (8s)"}),e("t-message",{duration:1e4,theme:"error",content:"This is my error (10s)"}))),e("h2",null,"使用关闭函数控制全局提示"),e("demo-wrapper",null,e("t-button",{theme:"primary",onClick:this.closeToggle},"自由控制关闭时机（打开/关闭）"),e("messsage-close",null)),e("h2",null,"关闭多条全局提示"),e("demo-wrapper",null,e("div",null,"待完善"),e("t-space",null,e("t-button",{theme:"primary",onClick:this.openAll},"点击打开多个消息"),e("t-button",{theme:"primary",onClick:this.closeAll},"点击关闭所有消息")),e("message-close-all",null)),e("div",{direction:"vertical",style:"width:100%",dangerouslySetInnerHTML:{__html:h}})))}},t(i,"defaultProps",{tab:"demo"}),t(i,"propTypes",{tab:String}),i));
